name: Job Artifacts and Outputs
on:
  pull_request:
    types: [opened, edited]
    # the above PR target any of the branches below
    branches:
      - Feature*
  workflow_dispatch:
    # if you want to run the build for each commit you pushed after creating the PR.
  push:
    branches:
      - Feature*
      - main
    paths-ignore:
      - ".github/workflows/*"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.5.2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependency-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        run: npm ci
      - name: Test the code
        run: npm run test

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-files: ${{ steps.publishh.outputs.scpt-file}}
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3.5.2
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependency-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install the dependencies
        run: npm ci
      - name: Build the project
        run: npm run build
      - name: publish Js filename
        id: publishh
        # run: find dist/assets/*.js -type f -execdir echo 'scpt-file={}' >>$GITHUB_OUTPUT';'
        run: find dist/assets/*.js -type f -execdir echo 'scpt-file={}' \; >> $GITHUB_OUTPUT

      - name: upload the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: react project dist files
          path: |
            dist
            package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download the artifacts
        uses: actions/download-artifact@v3
        with:
          name: react project dist files

      - name: output contents
        run: ls
      - name: Ouput the file name
        run: echo "${{ needs.build.outputs.script-files}}"

      - name: Deploy the git project
        run: echo "Deployingnthe project"

  Issues:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: output all the details of the event that triggered the workflow.
        run: echo "${{ toJson(github.event)}}"

  Info:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Output Github Context
        run: echo "${{ toJSON(github) }}"
      - name: output all the details of the event that triggered the workflow.
        run: echo "${{ toJson(github.event)}}"
